# links referÃªncia
- https://www.youtube.com/watch?v=y7OhuSGBt8o
- https://colab.research.google.com/drive/1wmbrrfEbwvRQ7vDUSaEH4nPplTFuAPgd
- https://realpython.com/beautiful-soup-web-scraper-python/
- https://lazarinastoy.com/the-ultimate-guide-to-pytrends-google-trends-api-with-python/


# bibliotecas
- pip install --upgrade selenium
    selenium (usamos o Chromedriver para Google Chrome e o Geckodriver para Firefox)
- pip install --upgrade requests
- pip install --upgrade beautifulsoup4
- pip install pytrends

# Programa para documentação
https://www.doxygen.nl/index.html

https://pypi.org/project/oxygen/

# sites para busca
-- https://www.vagas.com.br/
-- https://br.indeed.com/ (Segunda alternativa)

# demandas primeiro web scraping 
-- cargo: Analista de dados
-- cidade
-- uf
-- empresa
-- salário
-- habilidades
-- ferramentas
-- data de publicação do anúncio



# Momento1 - Qual o melhor momento para salvar o resultado? um arquivo .csv/.xmls (duas abas)


# Fazer o tratamento das informações coletadas

# Agrupamento das habilidades - Top 10

# Momento2 - Qual o melhor momento para salvar o resultado? um arquivo .csv/.xmls(duas abas)


# Conexão com a API - GOOGLE TRENDS

# Demandas para o Google Trends:

What data can you pull with the Google Trends API? 

Related to a particular keyword you provide to the API, you can pull the following data:

    Interest Over Time - Ok
    Historical Hourly Interest - NÃO
    Interest by Region - Ok
    Related Topics - Ok 
    Related Queries - Ok 
    Trending Searches - NÃO
    Top Charts - NÃO
    Keyword Suggestions - NÃO

We will explore the different methods that are available in the API for pulling this data in a bit, alongside how the syntax for each of these methods looks like.


# Momento3 - Qual o melhor momento para salvar o resultado? um arquivo .csv/.xmls(duas abas)
-- geração de um resultado

# Conexão com o Power BI direto (?)

# Visualização dos dados no Power BI, graficos, etc
# Apresentação dos dados para o Scrum Review
